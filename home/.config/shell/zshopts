#!/bin/zsh

######################
#    ZSH  OPTIONS    #
######################
# Vi Mode
bindkey -v
# Path
typeset -U PATH path
path=("${HOME}/.local/bin" "${HOME}/.bin" "$path[@]")
export PATH
# Autocomplete
autoload -Uz compinit promptinit
compinit
promptinit
zstyle ':completion:*' menu select
setopt COMPLETE_ALIASES
zstyle ':completion::complete:*' gain-privileges 1
# This will set the default prompt to the walters theme
prompt walters

# ZLE
typeset -g -A key
autoload -Uz up-line-or-beginning-search down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search

key[Home]="${terminfo[khome]}"
key[End]="${terminfo[kend]}"
key[Insert]="${terminfo[kich1]}"
key[Backspace]="${terminfo[kbs]}"
key[Delete]="${terminfo[kdch1]}"
key[Up]="${terminfo[kcuu1]}"
key[Down]="${terminfo[kcud1]}"
key[Left]="${terminfo[kcub1]}"
key[Right]="${terminfo[kcuf1]}"
key[PageUp]="${terminfo[kpp]}"
key[PageDown]="${terminfo[knp]}"
key[Shift-Tab]="${terminfo[kcbt]}"
key[Control-Left]="${terminfo[kLFT5]}"
key[Control-Right]="${terminfo[kRIT5]}"

# setup key accordingly
[[ -n "${key[Home]}"			 ]] && bindkey -- "${key[Home]}"			beginning-of-line
[[ -n "${key[End]}"				 ]] && bindkey -- "${key[End]}"				end-of-line
[[ -n "${key[Insert]}"			 ]] && bindkey -- "${key[Insert]}"			overwrite-mode
[[ -n "${key[Backspace]}"		 ]] && bindkey -- "${key[Backspace]}"		backward-delete-char
[[ -n "${key[Delete]}"			 ]] && bindkey -- "${key[Delete]}"			delete-char
[[ -n "${key[Up]}"				 ]] && bindkey -- "${key[Up]}"				up-line-or-beginning-search
[[ -n "${key[Down]}"			 ]] && bindkey -- "${key[Down]}"			down-line-or-beginning-search
[[ -n "${key[Left]}"			 ]] && bindkey -- "${key[Left]}"			backward-char
[[ -n "${key[Right]}"			 ]] && bindkey -- "${key[Right]}"			forward-char
[[ -n "${key[PageUp]}"			 ]] && bindkey -- "${key[PageUp]}"			beginning-of-buffer-or-history
[[ -n "${key[PageDown]}"		 ]] && bindkey -- "${key[PageDown]}"		end-of-buffer-or-history
[[ -n "${key[Shift-Tab]}"		 ]] && bindkey -- "${key[Shift-Tab]}"		reverse-menu-complete
[[ -n "${key[Control-Left]}"	 ]] && bindkey -- "${key[Control-Left]}"	backward-word
[[ -n "${key[Control-Right]}"	 ]] && bindkey -- "${key[Control-Right]}"	forward-word

# Finally, make sure the terminal is in application mode, when zle is
# active. Only then are the values from $terminfo valid.
if (( ${+terminfo[smkx]} && ${+terminfo[rmkx]} )) ; then
	autoload -Uz add-zle-hook-widget
	function zle_application_mode_start { echoti smkx }
	function zle_application_mode_stop { echoti rmkx }
	add-zle-hook-widget -Uz zle-line-init zle_application_mode_start
	add-zle-hook-widget -Uz zle-line-finish zle_application_mode_stop
fi
